<?xml version="1.0" encoding="UTF-8"?>
<beans
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	                    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	                    http://www.springframework.org/schema/tx
			            http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
			            http://www.springframework.org/schema/aop
			            http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">
		
    
	<import resource="app-dao.xml" />
	<import resource="app-service.xml" />
	
	
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:jdbc.properties</value>
			</list>
		</property>
	</bean>
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${jdbcDriverClassName}" />
		<property name="url" value="${jdbcUrl}" />
		<property name="username" value="${jdbcUsername}" />
		<property name="password" value="${jdbcPassword}" />
		<property name="maxActive" value="${jdbcMaxActive}" />
		<property name="maxIdle" value="${jdbcMaxIdle}" />
		<property name="maxWait" value="${jdbcMaxWait}" />
		<property name="defaultAutoCommit" value="true" />
		<property name="removeAbandoned" value="${jdbcRemoveAbandoned}" />
		<property name="removeAbandonedTimeout" value="${jdbcRemoveAbandonedTimeout}" />
		<property name="testOnBorrow" value="${jdbcTestOnBorrow}" />
		<property name="testWhileIdle" value="${jdbcTestWhileIdle}" />
		<property name="validationQuery" value="${jdbcValidationQuery}" />
		<property name="timeBetweenEvictionRunsMillis" value="${jdbcTimeBetweenEvictionRunsMillis}" />
		<property name="minEvictableIdleTimeMillis" value="${jdbcMinEvictableIdleTimeMillis}" />
	</bean>
    
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">  
        <property name = "dataSource" ref="dataSource"/>  
    </bean>
    
	
    <bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource">
			<ref bean="dataSource"></ref>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<prop key="hibernate.show_sql">false</prop>
				<prop key="connection.useUnicode">true</prop>  
                <prop key="connection.characterEncoding">utf-8</prop>
                <prop key="hibernate.hbm2ddl.auto">validate </prop>
			</props>
		</property>
		<property name="annotatedClasses">
		     <list>
		         <value>mvc.model.PushUser</value>
		         <value>mvc.model.PushMessage</value>
		     </list>
   		</property>

	</bean> 
     
    <bean id="applicationContextUtil" class="utils.ApplicationContextUtil"></bean>
    <!-- MQTT服务器类 
	<bean id="mqttServer" class="org.dna.mqtt.moquette.server.Server"></bean>
	<bean id="mqttClient" class="cloudservices.client.ClientService"></bean> -->
	<!-- Jedis配置 -->  
	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<property name="maxTotal" value="500" />
		<property name="maxIdle" value="100" />
		<property name="testOnBorrow" value="true" />
	</bean>
	
	<bean id="jedisPool" class="redis.clients.jedis.JedisPool">
		<constructor-arg index="0" ref="jedisPoolConfig" />
		<constructor-arg index="1" value="127.0.0.1" />
		<constructor-arg index="2" value="6379" />
	</bean>
	
	<!-- 定时器 -->
	<!--要调度的对象 -->
	<bean id="jobBean" class="mvc.scheduler.OnlineStatusUpdateJob" />
	<bean id="jobDetail"
		class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="jobBean" />
		<property name="targetMethod" value="execute" />
		<!--将并发设置为false -->
		<property name="concurrent" value="false" />
	</bean>

	<bean id="trigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail" ref="jobDetail" />
		<!--表达式，我的是每 30 执行一次 -->
		<property name="cronExpression" value="0/30 * * * * ?" />
	</bean>

	<!-- 总管理类如果将lazy-init='false'那么容器启动就会执行调度程序 -->
	<bean id="startQuertz" class="org.springframework.scheduling.quartz.SchedulerFactoryBean"
		lazy-init="false">
		<property name="triggers">
			<list>
				<!--作业调度器,list下可加入其他的调度器 -->
				<ref bean="trigger" />
			</list>
		</property>
	</bean>  
</beans>